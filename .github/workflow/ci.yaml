on:
  release:
    types: [published]

name: CI build
jobs:
  build:
    name: CI build
    runs-on: ubuntu-latest
    env:
      # Use docker.io for Docker Hub if empty
      REGISTRY: ghcr.io
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}
    permissions:
      contents: read
      packages: write
    steps:

    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
  
  
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract Docker metadata
      id: meta-php
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-php
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value={{branch}}-{{sha}}-{{date 'X'}},enable=${{ github.event_name != 'pull_request' && !contains(github.ref, 'refs/tags/') }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.php
        push: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]'}}
        tags: ${{ steps.meta-php.outputs.tags }}
        labels: ${{ steps.meta-php.outputs.labels }}